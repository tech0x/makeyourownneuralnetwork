
import java.io.*;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import java.util.Base64;

import processing.net.*;
import http.requests.*;

PFont f;
Client c;
String data;
int lastAction = 0;

void setup(){
  size(280,280, P2D);
  frameRate(200);
  noStroke();
  fill(0);
  background(255);
  smooth(8);
  f = createFont("Arial",32,true); 
}

float size = 10;
void draw(){
  color col = 255;
  if(mousePressed == true){
    switch(mouseButton){
      case LEFT: fill(0);
        break;
      case RIGHT: fill(255);
        background(col);
        break;
    }
    square(mouseX, mouseY, size);
  }

  if(keyPressed == true){
    println(keyCode);
    if(keyCode == 10){
      saveData();
      //saveFrame("testx.png");
    }
  }
}

String loadData(){ 
   String[] lines = loadStrings("testx.png");
   String stringdata = ""; 
   for (int i = 0 ; i < lines.length; i++) {
     stringdata = stringdata+lines[i];
   }
   return stringdata;
}

String loadData2(){ 
   byte[] lines = loadBytes("testx.png");
   String stringdata = ""; 
   for (int i = 0 ; i < lines.length; i++) {
     stringdata = stringdata+lines[i];
   }
   return stringdata;
}

void saveData(){
   if(millis()-lastAction > 1000){
     saveFrame("testx.png");
    
     String imgs = encodeImage(loadBytes("testx.png"));
     print(imgs);
  
     GetRequest get = new GetRequest("http://127.0.0.1:9091/?"+imgs);
     get.send();
   
     System.out.println("Reponse Content: " + get.getContent());
     textFont(f);       
     textAlign(CENTER);
     text(get.getContent(), width/2, 30); 
     println(get.getContent());
  }
  lastAction = millis();
}

void mouseWheel(MouseEvent event) {
  size += event.getCount();
  size = constrain(size, 0, 100);
  text("Size: "+size, 20, 50);
} 
 
public static String encodeImage(byte[] imageByteArray) {
  return Base64.getEncoder().encodeToString(imageByteArray);
}
